package daa_sea;
import java.util.Scanner;
import java.util.Random;

public class LP5_MergeSort
{
	static int max=5000;
	static int arr[];
	
	static void mergesort(int arr[],int low,int high)
	{
		int mid;
		if(low<high)
		{
			mid=(low+high)/2;
			mergesort(arr,low,mid);
			mergesort(arr,mid+1,high);
			merge(arr,low,mid,high);
		}
	}
	
	static void merge(int arr[],int low,int mid,int high)
	{
		int i,j,k,t[]=new int[max];
		i=k=low;
		j=mid+1;
		while(i<=mid && j<=high)
		{
			if(arr[i]<=arr[j])
			{
				t[k++]=arr[i++];
			}
			else
			{
				t[k++]=arr[j++];
			}
		}
		while(i<=mid)
		{
			t[k++]=arr[i++];
		}
		while(j<=high)
		{
			t[k++]=arr[j++];
		}
		for(i=low;i<=high;i++)
		{
			arr[i]=t[i];
		}
	}
	
	public static void main(String args[])
	{
		Scanner sc=new Scanner(System.in);
		Random generator=new Random();
		int i,n;
		System.out.print("Enter the number of elements to be sorted: ");
		n=sc.nextInt();
		arr=new int[n];
		for(i=0;i<n;i++)
		{
			arr[i]=generator.nextInt(100);
		}
		System.out.println("\nThe array generated: ");
		for(i=0;i<n;i++)
		{
			System.out.print(arr[i]+"\t");
		}
		long startTime=System.nanoTime();
		mergesort(arr, 0, n-1);
		long stopTime=System.nanoTime();
		long elapseTime=stopTime-startTime;
		System.out.println("\nThe array after sorting:");
		for(i=0;i<n;i++)
		{
			System.out.print(arr[i]+"\t");
		}
		System.out.println("\nTime taken to sort array of "+n+" elements is: "+elapseTime+" nanoseconds.");
	}
}
