import java.util.Scanner;
public class MaxMinDivideConquer {
    
    static class Pair {
        int min;
        int max;
        
        public Pair(int min, int max) {
            this.min = min;
            this.max = max;
        }
    }
    
    public static Pair findMaxMin(int[] arr, int low, int high) {
        if (low == high) {
            return new Pair(arr[low], arr[low]);
        } else if (high - low == 1) {
            return arr[low] < arr[high] ? new Pair(arr[low], arr[high]) : new Pair(arr[high], arr[low]);
        } else {
            int mid = (low + high) / 2;
            Pair leftPair = findMaxMin(arr, low, mid);
            Pair rightPair = findMaxMin(arr, mid + 1, high);
            
            int min = Math.min(leftPair.min, rightPair.min);
            int max = Math.max(leftPair.max, rightPair.max);
            
            return new Pair(min, max);
        }
    }
    
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n;
        System.out.println("Enter the size");
        n=sc.nextInt();
        System.out.println("Enter the elements");
        int arr[]= new int[n];
        for(int i=0;i<n;i++)
            arr[i]=sc.nextInt();

        
        long startTime = System.nanoTime();
        Pair result = findMaxMin(arr, 0, arr.length - 1);
        long endTime = System.nanoTime();
        
        System.out.println("Minimum element: " + result.min);
        System.out.println("Maximum element: " + result.max);
        
        long timeTaken = endTime - startTime;
        System.out.println("Time taken: " + timeTaken + " nanoseconds");
    }
}
